{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?74ca","webpack:///src/App.vue","webpack:///./src/App.vue?60d0","webpack:///./src/App.vue?315a","webpack:///./src/main.js","webpack:///./src/App.vue?db16","webpack:///./src/assets/world4.jpg"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","staticClass","ref","worldWidth","worldHeight","_v","_s","trainingProgress","trainingSamples","_e","car","viewSize","width","reducedViewSize","fps","durationString","highscores","_l","highscore","index","models","modelIndex","score","lastScore","model","class","layer","units","activation","trainings","staticRenderFns","ctx","imgWorld","worldLoaded","fpsCounter","tick","tickTime","duration","x","y","speed","steeringSpeed","angle","viewReduction","viewReducedSize","viewPixels","steering","samples","samplesMaxLength","trainingSamplesMaxLength","badRewards","badRewardsInARow","highscoresMaxLength","highscoresMaxShown","training","numberOfModels","computed","reducedSize","highscoresShown","mounted","$refs","canvas","getContext","Image","src","onload","app","ctxViewSnapshot","viewSnapshotCanvas","ctxCarSnapshot","carSnapshotCanvas","ctxCar","carCanvas","ctxView","viewCanvas","ctxViewReduced","viewCanvasReduced","ctxStats","statsCanvas","Array","createModel","refreshLoop","methods","console","layers","children","tf","sequential","add","dense","inputShape","compile","loss","optimizer","metrics","train","highscoreOfModel","random","Math","highscoreIndex","mother","featureValuesTraining","labelValuesTraining","featureValueTraining","featureTensorTraining","labelTensorTraining","trainModel","epochs","callbacks","onEpochEnd","onTrainEnd","predict","input","getSteering","date","enterFrame","drawWorld","getView","moveCar","drawStats","clearRect","beginPath","fillStyle","arc","actionPredicted","height","fill","rgb","action","testingDataInput","then","randomisation","randomisedValue","viewX","sin","viewY","cos","snapshotWhereViewIs","getImageData","viewSnapshotPixels","save","translate","rotate","color","fillRect","restore","imgWhereViewIs","putImageData","viewPixelsReduced","unshift","state","previousTotalBrightness","totalBrightness","brightness","reward","checkCarCollision","snapshotWhereCarIs","carSnapshotPixels","imgWhereCarIs","drawCarAndViewSquare","totalR","totalG","totalB","undefined","resetCar","sort","strokeStyle","rect","stroke","componentToHex","hex","toString","rgbToHex","g","b","reducePixels","pixels","size","pixelsReduced","drawImage","component","Vue","config","productionTip","render","h","App","$mount"],"mappings":"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","file":"js/app.9e46249e.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/selfdriving/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{staticClass:\"world\"},[_c('canvas',{ref:\"canvas\",staticClass:\"world-canvas\",attrs:{\"width\":_vm.worldWidth,\"height\":_vm.worldHeight}}),(_vm.training)?_c('div',{staticClass:\"training\"},[_c('span',[_vm._v(\"TRAINING\"),_c('br'),_vm._v(_vm._s(_vm.trainingProgress)+\"% (\"+_vm._s(_vm.trainingSamples.length)+\")\")])]):_vm._e()]),_c('canvas',{ref:\"carSnapshotCanvas\",staticClass:\"car-snapshot-canvas\",attrs:{\"width\":_vm.car.length*1.5,\"height\":_vm.car.length*1.5}}),_c('canvas',{ref:\"viewSnapshotCanvas\",staticClass:\"view-snapshot-canvas\",attrs:{\"width\":_vm.viewSize*1.5,\"height\":_vm.viewSize*1.5}}),_c('canvas',{ref:\"carCanvas\",staticClass:\"car-canvas\",attrs:{\"width\":_vm.car.width,\"height\":_vm.car.length}}),_c('canvas',{ref:\"viewCanvas\",staticClass:\"view-canvas\",attrs:{\"width\":_vm.viewSize,\"height\":_vm.viewSize}}),_c('canvas',{ref:\"viewCanvasReduced\",staticClass:\"view-canvas-reduced\",attrs:{\"width\":_vm.reducedViewSize,\"height\":_vm.reducedViewSize}}),_c('span',{staticClass:\"fps\"},[_vm._v(_vm._s(_vm.fps)+\" fps\")]),_c('div',{staticClass:\"highscores\"},[_c('div',{staticClass:\"duration\"},[_c('label',[_vm._v(\"Total Duration\")]),_vm._v(\" \"+_vm._s(_vm.durationString)+\" \")]),_c('label',[_vm._v(\"Highscores (\"+_vm._s(_vm.highscores.length)+\")\")]),_c('ul',_vm._l((_vm.highscoresShown),function(highscore,index){return _c('li',{key:index},[_c('b',[_vm._v(_vm._s(_vm.models[highscore.modelIndex].name)+\" - \")]),_vm._v(\" \"+_vm._s(highscore.score))])}),0)]),_c('div',{staticClass:\"score\"},[_c('div',{staticClass:\"current\"},[_c('label',[_vm._v(\"Current Score\")]),_vm._v(\" \"+_vm._s(_vm.score)+\" \")]),_c('div',{staticClass:\"last\"},[_c('label',[_vm._v(\"Last Score\")]),_vm._v(\" \"+_vm._s(_vm.lastScore)+\" \")])]),_c('div',{staticClass:\"stats\"},[_c('canvas',{ref:\"statsCanvas\",staticClass:\"stats-canvas\",attrs:{\"width\":40,\"height\":500}})]),_c('div',{staticClass:\"models\"},[_c('label',[_vm._v(\"Drivers\")]),_c('ul',_vm._l((_vm.models),function(model,index){return _c('li',{key:index,class:{'active':index === _vm.modelIndex}},[(model)?[_vm._v(\" \"+_vm._s(model.name)+\" \"),_c('span',{staticClass:\"layers\"},[_vm._v(\" [ \"),_vm._l((model.layers),function(layer){return [_vm._v(_vm._s(layer.units)+\" \"+_vm._s(layer.activation)+\", \")]}),_vm._v(\" ] \")],2),_vm._v(_vm._s(model.highscore||\"–\")+\" (t: \"+_vm._s(model.trainings)+\") \")]:_vm._e()],2)}),0)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div id=\"app\">\n    <div class=\"world\">\n      <canvas class=\"world-canvas\" ref=\"canvas\" :width=\"worldWidth\" :height=\"worldHeight\"></canvas>\n      <div class=\"training\" v-if=\"training\"><span>TRAINING<br>{{trainingProgress}}% ({{trainingSamples.length}})</span></div>\n    </div>\n    <canvas class=\"car-snapshot-canvas\" ref=\"carSnapshotCanvas\" :width=\"car.length*1.5\" :height=\"car.length*1.5\"></canvas>\n    <canvas class=\"view-snapshot-canvas\" ref=\"viewSnapshotCanvas\" :width=\"viewSize*1.5\" :height=\"viewSize*1.5\"></canvas>\n    <canvas class=\"car-canvas\" ref=\"carCanvas\" :width=\"car.width\" :height=\"car.length\"></canvas>\n    <canvas class=\"view-canvas\" ref=\"viewCanvas\" :width=\"viewSize\" :height=\"viewSize\"></canvas>\n    <canvas class=\"view-canvas-reduced\" ref=\"viewCanvasReduced\" :width=\"reducedViewSize\" :height=\"reducedViewSize\"></canvas>\n    <span class=\"fps\">{{ fps }} fps</span>\n    <div class=\"highscores\">\n      <div class=\"duration\">\n        <label>Total Duration</label>\n        {{durationString}}\n      </div>\n      <label>Highscores ({{highscores.length}})</label>\n      <ul>\n        <li v-for=\"(highscore,index) in highscoresShown\" :key=\"index\"><b>{{models[highscore.modelIndex].name}} - </b> {{highscore.score}}</li>\n        <!-- <li v-if=\"highscores.length\">last: {{highscores[highscores.length-1].score}}</li> -->\n      </ul>\n    </div>\n    <div class=\"score\">\n      <div class=\"current\">\n        <label>Current Score</label>\n        {{score}}\n      </div>\n      <div class=\"last\">\n        <label>Last Score</label>\n        {{lastScore}}\n      </div>\n    </div>\n    <div class=\"stats\">\n      <canvas class=\"stats-canvas\" ref=\"statsCanvas\" :width=\"40\" :height=\"500\"></canvas>\n    </div>\n    <div class=\"models\">\n      <label>Drivers</label>\n      <ul>\n        <li v-for=\"(model,index) in models\" :key=\"index\" :class=\"{'active':index === modelIndex}\">\n          <template v-if=\"model\">\n            {{ model.name }}\n            <span class=\"layers\">\n              [\n              <template v-for=\"(layer) in model.layers\">{{layer.units}} {{layer.activation}}, </template>\n              ]\n            </span>{{model.highscore||\"–\"}} (t: {{model.trainings}})\n          </template>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\n\nconst tf = require('@tensorflow/tfjs');\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      ctx: null,\n      worldWidth: 256,\n      worldHeight: 256,\n      imgWorld: null,\n      worldLoaded: false,\n      fps: null,\n      fpsCounter: null,\n      tick: true,\n      tickTime: null,\n      duration: -1,\n      durationString: null,\n      car: {\n        width: 8,\n        length: 16,\n        x: 256 / 2 * 0.25,\n        y: 256 / 2 * 1.5,\n        speed: 0.5,\n        steeringSpeed: 0.025,\n        angle: 0\n      },\n      viewSize: 32,\n      viewReduction: 4,\n      viewReducedSize: null,\n      viewPixels: null,\n      steering: null,\n      samples: [],\n      samplesMaxLength: 4096,\n      trainingSamples: null,\n      trainingSamplesMaxLength: 4096,\n      badRewards: 0,\n      badRewardsInARow: 0,\n      score: 0,\n      lastScore: null,\n      highscores: [],\n      highscoresMaxLength: 10,\n      highscoresMaxShown: 10,\n      training: false,\n      trainingProgress: 0,\n      models: undefined,\n      numberOfModels: 5,\n      modelIndex: 0\n    }\n  },\n  computed: {\n    reducedViewSize() {\n      let reducedSize = this.viewSize;\n      for( let i = 0; i < this.viewReduction; i++ ) {\n        reducedSize = reducedSize / 2;\n      }\n      return reducedSize;\n    },\n    highscoresShown() {\n      return this.highscores.slice(0,this.highscoresMaxShown);\n    }\n  },\n  mounted() {\n    this.ctx = this.$refs.canvas.getContext(\"2d\");\n    this.imgWorld = new Image(this.worldWidth,this.worldHeight);\n    this.imgWorld.src = require('/src/assets/world4.jpg');\n    const app = this;\n    this.imgWorld.onload = function() {\n      app.worldLoaded = true;\n    }\n    //document.addEventListener('keydown', this.keyDown);\n    //document.addEventListener('keyup', this.keyUp);\n\n    this.ctxViewSnapshot = this.$refs.viewSnapshotCanvas.getContext(\"2d\");\n    this.ctxCarSnapshot = this.$refs.carSnapshotCanvas.getContext(\"2d\");\n\n    this.ctxCar = this.$refs.carCanvas.getContext(\"2d\");\n    this.ctxView = this.$refs.viewCanvas.getContext(\"2d\");\n    this.ctxViewReduced = this.$refs.viewCanvasReduced.getContext(\"2d\");\n\n    this.ctxStats = this.$refs.statsCanvas.getContext(\"2d\");\n\n\n    this.viewReducedSize = this.viewSize;\n    for( let i = 0; i < this.viewReduction; i++ ) {\n      this.viewReducedSize = this.viewReducedSize / 2;\n    }\n\n    this.models = new Array(this.numberOfModels);\n    this.createModel(this.modelIndex);\n\n    this.refreshLoop();\n  },\n  methods: {\n    createModel( modelIndex ) {\n      console.log(\"creating model ...\");\n      const numberOfLayers =  2;\n      let layers = new Array( numberOfLayers );\n      for( let i = numberOfLayers-1; i >= 0; i-- ) {\n        if( i === numberOfLayers-1 ) {\n          // last layer\n          layers[i] = {\n            units: 1,\n            activation: \"sigmoid\"\n          };\n        }\n        else {\n          layers[i] = {\n            units: 3 + Math.ceil( Math.random()*15 ),\n            activation: [\"relu\",\"sigmoid\"][Math.round(Math.random())]\n          };\n        }\n      }\n      this.models[modelIndex] = {\n        layers: layers,\n        trainings: 0,\n        highscore: undefined,\n        name: modelIndex+1,\n        children: 0\n      };\n\n      // create model with layers\n      this.models[modelIndex].model = tf.sequential();\n      for( let i = 0; i < layers.length; i++ ) {\n        if( i === 0 ) {\n          // first layer\n          this.models[modelIndex].model.add(tf.layers.dense({inputShape: this.viewReducedSize*this.viewReducedSize, activation: layers[i].activation, units: layers[i].units}));\n        }\n        else {\n          this.models[modelIndex].model.add(tf.layers.dense({activation: layers[i].activation, units: layers[i].units}));\n        }\n      }\n      /*\n      this.models[i].model.add(tf.layers.dense({inputShape: this.viewReducedSize*this.viewReducedSize, activation: \"relu\", units: 10}));\n      this.models[i].model.add(tf.layers.dense({activation: \"relu\", units: 5}));\n      this.models[i].model.add(tf.layers.dense({activation: \"sigmoid\", units: 1}));\n      */\n      //this.models[i].add(tf.layers.dense({activation: \"relu\", units: 1}));\n      this.models[modelIndex].model.compile({loss:'binaryCrossentropy',optimizer:tf.train.rmsprop(0.1),metrics:['accuracy']});\n      //this.model.compile({loss:'categoricalCrossentropy',optimizer:tf.train.adam(),metrics:['accuracy']});\n    },\n    async train() {\n\n      // check if new highscore:\n      let highscoreOfModel = this.highscores.find(el => el.modelIndex === this.modelIndex );\n      if( highscoreOfModel ) {\n        this.models[this.modelIndex].highscore = highscoreOfModel.score;\n      }\n\n      // switch to next model\n      this.modelIndex = (this.modelIndex +1) % this.numberOfModels;\n\n      // create or make clone, if necessary\n      if( !this.models[this.modelIndex] ) {\n        this.createModel(this.modelIndex);\n      }\n      else {\n        // check for new highscore\n        let highscoreOfModel = this.highscores.find(el => el.modelIndex === this.modelIndex );\n        if( !highscoreOfModel ) {\n          // replace model\n\n          let random = Math.random();\n          let highscoreIndex;\n          if( random > 1-0.182 ) {\n            highscoreIndex = 0;\n          }\n          else if( random > 1 - 0.182 - 0.163) {\n            highscoreIndex = 1;\n          }\n          else if( random > 1 - 0.182 - 0.163 - 0.146 ) {\n            highscoreIndex = 2;\n          }\n          else if( random > 1 - 0.182 - 0.163 - 0.146 - 0.127 ) {\n            highscoreIndex = 3;\n          }\n          else if( random > 1 - 0.182 - 0.163 - 0.146 - 0.127 - 0.109 ) {\n            highscoreIndex = 4;\n          }\n          else if( random > 1 - 0.182 - 0.163 - 0.146 - 0.127 - 0.109 - 0.091 ) {\n            highscoreIndex = 5;\n          }\n          else if( random > 1 - 0.182 - 0.163 - 0.146 - 0.127 - 0.109 - 0.091 - 0.073 ) {\n            highscoreIndex = 6;\n          }\n          else if( random > 1 - 0.182 - 0.163 - 0.146 - 0.127 - 0.109 - 0.091 - 0.073 - 0.054 ) {\n            highscoreIndex = 7;\n          }\n          else if( random > 1 - 0.182 - 0.163 - 0.146 - 0.127 - 0.109 - 0.091 - 0.073 - 0.054 - 0.037 ) {\n            highscoreIndex = 8;\n          }\n          else if( random > 1 - 0.182 - 0.163 - 0.146 - 0.127 - 0.109 - 0.091 - 0.073 - 0.054 - 0.037 - 0.018 ) {\n            highscoreIndex = 9;\n          }\n\n          const mother = this.models[ this.highscores[highscoreIndex].modelIndex ];\n          this.models[this.modelIndex] = {...mother};\n          this.models[this.modelIndex].trainings = 0;\n          this.models[this.modelIndex].highscore = undefined;\n          mother.children++;\n          this.models[this.modelIndex].name = mother.name+\".\"+mother.children;\n        }\n\n      }\n\n      this.training = true;\n\n      this.trainingSamples = [];\n      for( let i = 0; i < this.highscores.length; i++ ) {\n        let samples = [];\n        for( let j = 0; j < this.highscores[i].samples.length; j++ ) {\n          if( this.highscores[i].samples[j].reward > 0.5 ) {\n            // use only good rewards\n            samples.push( this.highscores[i].samples[j] );\n          }\n        }\n        this.trainingSamples.push(...samples);\n      }\n      // randomise and slice\n      this.trainingSamples.sort(function(){return 0.5 - Math.random()});\n      this.trainingSamples = this.trainingSamples.slice(0,this.trainingSamplesMaxLength);\n\n      console.log(\"total number of samples: \"+this.trainingSamples.length);\n\n      let featureValuesTraining = [];\n      let labelValuesTraining = [];\n      for( let i = 0; i < this.trainingSamples.length; i++ ) {\n        let featureValueTraining = [...this.trainingSamples[i].state];\n        //featureValueTraining.push( this.trainingSamples[i].reward );\n        featureValuesTraining.push( featureValueTraining );\n        labelValuesTraining.push( this.trainingSamples[i].action );\n      }\n      const featureTensorTraining = tf.tensor2d( featureValuesTraining, [featureValuesTraining.length, featureValuesTraining[0].length] );\n      const labelTensorTraining = tf.tensor2d( labelValuesTraining, [labelValuesTraining.length, 1] );\n\n      console.log(\"train model ...\");\n      await this.trainModel( this.modelIndex, featureTensorTraining, labelTensorTraining, Math.min(10, this.trainingSamplesMaxLength/this.trainingSamples.length)*10 );\n\n      this.training = false;\n      this.trainingProgress = 0;\n\n      this.models[this.modelIndex].trainings += 1;\n    },\n    async trainModel( modelIndex, featureTensorTraining, labelTensorTraining, epochs ) {\n      const ref = this;\n      return this.models[modelIndex].model.fit( featureTensorTraining, labelTensorTraining, {\n        epochs,\n        //validationSplit: 0.2,\n        callbacks: {\n          onEpochEnd: function(epoch) {\n            ref.trainingProgress = Math.round( epoch / epochs * 100 );\n          },\n          onTrainEnd: function() {\n            console.log(\"done\");\n          }\n        }\n      });\n    },\n    async predict( modelIndex, input ) {\n      return tf.tidy( () => {\n        const inputTensor = tf.tensor2d([input],[1, this.viewReducedSize*this.viewReducedSize]);\n        const outputTensor = this.models[modelIndex].model.predict( inputTensor );\n        const outputValue = outputTensor.dataSync();\n\n        return outputValue;\n      });\n    },\n    async getSteering() {\n      this.prediction = await this.predict( this.modelIndex, this.testingDataInput );\n      this.prediction = Math.max( 0, this.prediction  )\n      return this.prediction;\n    },\n    refreshLoop() {\n      window.requestAnimationFrame(() => {\n        const now = performance.now();\n        if( this.tick ) {\n          this.tickTime = now;\n          this.fps = this.fpsCounter;\n          this.fpsCounter = 0;\n          this.tick = false;\n\n          this.duration++;\n          const date = new Date(0);\n          date.setSeconds(this.duration); // specify value for SECONDS here\n          this.durationString = date.toISOString().substr(11, 8);\n        }\n        else {\n          this.fpsCounter++;\n          if( now >= this.tickTime + 1000 ) {\n            this.tick = true;\n          }\n        }\n\n        this.enterFrame();\n\n        this.refreshLoop();\n      });\n    },\n    enterFrame() {\n      if( this.worldLoaded && !this.training ) {\n        this.drawWorld();\n        this.getView();\n        this.moveCar();\n      }\n    },\n    drawStats() {\n      this.ctxStats.clearRect( 0, 0, this.ctxStats.canvas.width, this.ctxStats.canvas.height );\n      //this.ctxStats.fillRect(0, 0, this.ctxStats.canvas.width, this.ctxStats.canvas.height);\n      //this.ctxStats.strokeStyle = \"#ffffff\";\n      const numberOfsamplesDrawn = Math.min(512, this.samples.length);\n      for( let i = 0; i < numberOfsamplesDrawn; i++ ) {\n        /*\n        this.ctxStats.moveTo( this.samples[i].action * this.ctxStats.canvas.width, this.ctxStats.canvas.height/this.samples.length * i );\n        this.ctxStats.lineTo( this.samples[i+1].action * this.ctxStats.canvas.width, this.ctxStats.canvas.height/this.samples.length * (i+1) );\n        */\n        this.ctxStats.beginPath();\n        this.ctxStats.fillStyle = \"#ffffff\";\n        this.ctxStats.arc(this.samples[i].actionPredicted * this.ctxStats.canvas.width, this.ctxStats.canvas.height/numberOfsamplesDrawn * i, 1, 0, 2 * Math.PI);\n        this.ctxStats.fill();\n\n        this.ctxStats.beginPath();\n        let rgb;\n        if( this.samples[i].reward >= 0.5 ) {\n          //rgb = \"#00ff00\";\n          rgb = \"#00\"+ Math.round( this.samples[i].reward * 255 ).toString(16) + \"00\";\n          this.ctxStats.fillStyle = rgb;\n          this.ctxStats.arc(this.samples[i].action * this.ctxStats.canvas.width, this.ctxStats.canvas.height/numberOfsamplesDrawn * i, 1, 0, 2 * Math.PI);\n          this.ctxStats.fill();\n        }\n        else {\n          //rgb = \"#ff0000\";\n          rgb = \"#\"+ Math.round( (1-this.samples[i].reward) * 255 ).toString(16) + \"0000\";\n          this.ctxStats.fillStyle = rgb;\n          this.ctxStats.arc(this.samples[i].action * this.ctxStats.canvas.width, this.ctxStats.canvas.height/numberOfsamplesDrawn * i, 1, 0, 2 * Math.PI);\n          this.ctxStats.fill();\n        }\n      }\n      //this.ctxStats.stroke();\n    },\n    moveCar() {\n      this.testingDataInput = [...this.viewPixels];\n      //this.testingDataInput.push(1.0);\n      const ref = this;\n      this.getSteering().then( function(value) {\n        //console.log(\"predicted steering: \"+value);\n        value = Math.min( value, 1 );\n        value = Math.max( value, 0 );\n        //console.log(\"predicted steering: \"+value);\n        ref.car.steeringPredicted = value;\n\n        let randomisation = 0;\n        if( ref.samples[0] ) {\n          if( ref.samples[0].reward < 0.5 ) {\n            randomisation = Math.min( 1, (ref.badRewards/ref.samples.length) * ref.badRewardsInARow );\n          }\n          else {\n            randomisation = 0.05;\n          }\n        }\n        else {\n\n          randomisation = 1;\n        }\n\n        //console.log(\"randomisation: \"+randomisation);\n        const random = Math.random();\n        let randomisedValue = value - randomisation*1 + random * randomisation*2;\n        randomisedValue = Math.min( randomisedValue, 1 );\n        randomisedValue = Math.max( randomisedValue, 0 );\n        ref.car.steering = randomisedValue;\n        //console.log(\"new steering: \"+randomisedValue);\n\n        if( ref.car.steering < 0.5 ) {\n          // left\n          const steeringStrength = (0.5 - ref.car.steering) * 2\n          ref.car.angle -= ref.car.steeringSpeed * steeringStrength;\n        }\n        else if( ref.car.steering > 0.5 ){\n          // right\n          const steeringStrength = (ref.car.steering - 0.5) * 2\n          ref.car.angle += ref.car.steeringSpeed * steeringStrength;\n        }\n\n        ref.car.x += Math.sin( ref.car.angle ) *ref.car.speed;\n        ref.car.y -= Math.cos( ref.car.angle ) *ref.car.speed;\n\n        ref.checkCarCollision();\n      });\n    },\n    getView() {\n      // view\n      this.car.viewX = this.car.x + Math.sin( this.car.angle ) * (this.car.length*0+this.viewSize/2);\n      this.car.viewY = this.car.y - Math.cos( this.car.angle ) * (this.car.length*0+this.viewSize/2);\n      // get view image\n      this.snapshotWhereViewIs = this.ctx.getImageData( this.car.viewX - this.ctxViewSnapshot.canvas.width/2, this.car.viewY - this.ctxViewSnapshot.canvas.height/2, this.ctxViewSnapshot.canvas.width, this.ctxViewSnapshot.canvas.height );\n      // read pixels\n      let viewSnapshotPixels = [];\n      for( let i = 0; i < this.snapshotWhereViewIs.data.length; i += 4 ) {\n        const r = this.snapshotWhereViewIs.data[i];\n        const g = this.snapshotWhereViewIs.data[i+1];\n        const b = this.snapshotWhereViewIs.data[i+2];\n        viewSnapshotPixels.push( [r,g,b] );\n      }\n      // draw rotated image\n      this.ctxViewSnapshot.save();\n      this.ctxViewSnapshot.clearRect( 0, 0, this.ctxViewSnapshot.canvas.width, this.ctxViewSnapshot.canvas.height );\n      this.ctxViewSnapshot.translate( this.ctxViewSnapshot.canvas.width/2, this.ctxViewSnapshot.canvas.height/2 );\n      this.ctxViewSnapshot.rotate( -this.car.angle );\n      this.ctxViewSnapshot.translate( -this.ctxViewSnapshot.canvas.width/2, -this.ctxViewSnapshot.canvas.height/2 );\n      for( let y = 0; y < this.ctxViewSnapshot.canvas.height; y++ ) {\n        for( let x = 0; x < this.ctxViewSnapshot.canvas.width; x++ ) {\n          const pixelIndex = y*this.ctxViewSnapshot.canvas.width + x;\n          const color = this.rgbToHex( viewSnapshotPixels[pixelIndex][0], viewSnapshotPixels[pixelIndex][1], viewSnapshotPixels[pixelIndex][2] );\n          this.ctxViewSnapshot.fillStyle = color;\n          this.ctxViewSnapshot.fillRect( x, y, 1.5, 1.5 );\n        }\n      }\n      this.ctxViewSnapshot.restore();\n      // get view image\n      this.imgWhereViewIs = this.ctxViewSnapshot.getImageData( this.ctxViewSnapshot.canvas.width/2 - this.ctxView.canvas.width/2, this.ctxViewSnapshot.canvas.height/2 - this.ctxView.canvas.height/2, this.ctxView.canvas.width, this.ctxView.canvas.height );\n      this.ctxView.putImageData(this.imgWhereViewIs, 0, 0);\n      // read pixels\n      let viewPixels = [];\n      for( let i = 0; i < this.imgWhereViewIs.data.length; i += 4 ) {\n        const r = this.imgWhereViewIs.data[i];\n        const g = this.imgWhereViewIs.data[i+1];\n        const b = this.imgWhereViewIs.data[i+2];\n        viewPixels.push( [r,g,b] );\n      }\n      let viewPixelsReduced = viewPixels;\n      for( let i = 0; i < this.viewReduction; i++ ) {\n        viewPixelsReduced = this.reducePixels( viewPixelsReduced, Math.sqrt(viewPixelsReduced.length) );\n      }\n      // draw reduced view\n      for( let y = 0; y < this.ctxViewReduced.canvas.height; y++ ) {\n        for( let x = 0; x < this.ctxViewReduced.canvas.width; x++ ) {\n          const pixelIndex = y*this.ctxViewReduced.canvas.width + x;\n          const color = this.rgbToHex( viewPixelsReduced[pixelIndex][0], viewPixelsReduced[pixelIndex][1], viewPixelsReduced[pixelIndex][2] );\n          this.ctxViewReduced.fillStyle = color;\n          this.ctxViewReduced.fillRect( x, y, 1.5, 1.5 );\n        }\n      }\n\n      let previousTotalBrightness;\n      // create sample\n      if( this.viewPixels ) {\n        // has previous state\n        this.samples.unshift( {\n          state: this.viewPixels,\n          action: this.car.steering,\n          actionPredicted: this.car.steeringPredicted\n        } );\n        //this.samples = this.samples.slice(0,this.samplesMaxLength);\n        previousTotalBrightness = this.totalBrightness;\n      }\n\n      // save new view pixels\n      this.viewPixels = [];\n      this.totalBrightness = 0;\n      for( let i = 0; i < viewPixelsReduced.length; i++ ) {\n        const brightness = (viewPixelsReduced[i][0] + viewPixelsReduced[i][1] + viewPixelsReduced[i][2]) / 765;\n        this.viewPixels.push( brightness );\n        this.totalBrightness += brightness;\n      }\n      this.totalBrightness = this.totalBrightness / this.viewPixels.length;\n\n      if( this.samples.length ) {\n        const brightnessChange = this.totalBrightness - previousTotalBrightness;\n        console.log(\"---\");\n        //console.log( \"totalBrightness: \"+ this.totalBrightness );\n        //console.log( \"previousTotalBrightness: \"+ previousTotalBrightness );\n        //console.log( \"brightnessChange: \"+ brightnessChange );\n        let reward;\n        if( brightnessChange >= 0 ) {\n          // better\n          if( this.totalBrightness > 0.5 ) {\n            // not so bad situation\n            reward = 1;\n          }\n          else {\n            // bad situation\n            reward = 0.75 + Math.min( 0.25, brightnessChange*10 * this.totalBrightness );\n          }\n          //reward = 1;\n          //console.log(reward+\": better\");\n        }\n        else {\n          // worse\n          if( this.totalBrightness < 0.5 ) {\n            // bad situation\n            reward = 0;\n          }\n          else {\n            // bad situation\n            reward = Math.min( 0.25, Math.abs(brightnessChange)*10 * this.totalBrightness );\n          }\n          reward = 0;\n          //console.log(reward+\": worse\");\n        }\n        this.samples[0].reward = reward;\n\n\n        // calculate total accuarcy\n        if( reward < 0.5 ) {\n          this.badRewards++;\n          this.badRewardsInARow++;\n        }\n        else {\n          this.badRewardsInARow = 0;\n        }\n\n\n        // trim samples:\n        if( this.samples.length === this.samplesMaxLength ) {\n          //console.log(\"max length reached: \"+this.samples.length);\n          if( this.samples[this.samples.length-1].reward < 0.5 ) {\n            //console.log(\"last is badReward\");\n            this.badRewards--;\n          }\n          //console.log(\"remove\");\n          this.samples = this.samples.slice(0,this.samplesMaxLength-1);\n          //console.log(\"new length: \" +this.samples.length);\n        }\n        console.log( \"good samples: \"+(this.samples.length-this.badRewards) +\" of \"+this.samples.length);\n\n      }\n      else {\n        // first cycle\n        this.badRewards = 0;\n        this.badRewardsInARow = 0;\n      }\n\n    },\n    checkCarCollision() {\n      // get car image\n      this.snapshotWhereCarIs = this.ctx.getImageData( this.car.x - this.ctxCarSnapshot.canvas.width/2, this.car.y - this.ctxCarSnapshot.canvas.height/2, this.ctxCarSnapshot.canvas.width, this.ctxCarSnapshot.canvas.height );\n      // read pixels\n      let carSnapshotPixels = [];\n      for( let i = 0; i < this.snapshotWhereCarIs.data.length; i += 4 ) {\n        const r = this.snapshotWhereCarIs.data[i];\n        const g = this.snapshotWhereCarIs.data[i+1];\n        const b = this.snapshotWhereCarIs.data[i+2];\n        carSnapshotPixels.push( [r,g,b] );\n      }\n      // draw rotated image\n      this.ctxCarSnapshot.save();\n      this.ctxCarSnapshot.clearRect( 0, 0, this.ctxCarSnapshot.canvas.width, this.ctxCarSnapshot.canvas.height );\n      this.ctxCarSnapshot.translate( this.ctxCarSnapshot.canvas.width/2, this.ctxCarSnapshot.canvas.height/2 );\n      this.ctxCarSnapshot.rotate( -this.car.angle );\n      this.ctxCarSnapshot.translate( -this.ctxCarSnapshot.canvas.width/2, -this.ctxCarSnapshot.canvas.height/2 );\n      for( let y = 0; y < this.ctxCarSnapshot.canvas.height; y++ ) {\n        for( let x = 0; x < this.ctxCarSnapshot.canvas.width; x++ ) {\n          const pixelIndex = y*this.ctxCarSnapshot.canvas.width + x;\n          const color = this.rgbToHex( carSnapshotPixels[pixelIndex][0], carSnapshotPixels[pixelIndex][1], carSnapshotPixels[pixelIndex][2] );\n          this.ctxCarSnapshot.fillStyle = color;\n          this.ctxCarSnapshot.fillRect( x, y, 1.5, 1.5 );\n        }\n      }\n      this.ctxCarSnapshot.restore();\n      // get car image\n      this.imgWhereCarIs = this.ctxCarSnapshot.getImageData( this.ctxCarSnapshot.canvas.width/2 - this.ctxCar.canvas.width/2, this.ctxCarSnapshot.canvas.height/2 - this.ctxCar.canvas.height/2, this.ctxCar.canvas.width, this.ctxCar.canvas.height );\n      this.ctxCar.putImageData(this.imgWhereCarIs, 0, 0);\n\n\n\n      this.drawCarAndViewSquare();\n\n\n      // read pixels\n      let totalR = 0;\n      let totalG = 0;\n      let totalB = 0;\n      for( let i = 0; i < this.imgWhereCarIs.data.length; i += 4 ) {\n        totalR += this.imgWhereCarIs.data[i];\n        totalG += this.imgWhereCarIs.data[i+1];\n        totalB += this.imgWhereCarIs.data[i+2];\n      }\n      totalR = Math.round( totalR / (this.imgWhereCarIs.data.length /4) );\n      totalG = Math.round( totalG / (this.imgWhereCarIs.data.length /4) );\n      totalB = Math.round( totalB / (this.imgWhereCarIs.data.length /4) );\n      if( totalR + totalG + totalB < 760 ) {\n        console.log(\"collision!\");\n\n        this.viewPixels = null;\n        this.car.steering = undefined;\n        this.resetCar();\n\n        if( this.highscores.length < this.highscoresMaxLength || this.score > this.highscores[this.highscoresMaxLength-1].score ) {\n          console.log(\"new highscore\");\n\n          this.highscores.push( {\n            score: this.score,\n            samples: [...this.samples],\n            modelIndex: this.modelIndex\n          } );\n          this.highscores.sort(function(a, b){return b.score - a.score});\n          this.highscores = this.highscores.slice(0,this.highscoresMaxLength);\n        }\n        console.log(\"train\");\n        this.train();\n\n        this.drawStats();\n\n        this.samples = [];\n        this.lastScore = this.score;\n        this.score = 0;\n\n        //this.refreshLoop = null;\n      }\n      else {\n        this.score++;\n        this.drawStats();\n      }\n    },\n    drawCarAndViewSquare() {\n      // draw car\n      this.ctx.save();\n      this.ctx.translate( this.car.x, this.car.y );\n      this.ctx.rotate( this.car.angle );\n      this.ctx.translate( -this.car.x, -this.car.y );\n      this.ctx.fillRect( this.car.x -this.car.width/2, this.car.y -this.car.length/2, this.car.width, this.car.length );\n      this.ctx.restore();\n\n      // draw view rect\n      this.ctx.save();\n      this.ctx.translate( this.car.viewX, this.car.viewY );\n      this.ctx.rotate( this.car.angle );\n      this.ctx.translate( -this.car.viewX, -this.car.viewY );\n      this.ctx.strokeStyle = \"#ff0000\";\n      this.ctx.beginPath();\n      this.ctx.rect( this.car.viewX -this.ctxView.canvas.width/2, this.car.viewY -this.ctxView.canvas.height/2, this.ctxView.canvas.width, this.ctxView.canvas.height );\n      this.ctx.stroke();\n      this.ctx.restore();\n    },\n    componentToHex(c) {\n      var hex = c.toString(16);\n      return hex.length == 1 ? \"0\" + hex : hex;\n    },\n    rgbToHex(r, g, b) {\n      return \"#\" + this.componentToHex(r) + this.componentToHex(g) + this.componentToHex(b);\n    },\n    reducePixels(pixels,size) {\n      // reduce resolution\n      let pixelsReduced = [];\n      for( let y = 0; y < size; y+=2 ) {\n        for( let x = 0; x < size; x+=2 ) {\n          const pixelIndexes = [\n            y*size + x,\n            y*size + x +1,\n            (y+1)*size + x,\n            (y+1)*size + x +1,\n          ];\n\n          let totalR = 0;\n          let totalG = 0;\n          let totalB = 0;\n          for( let i = 0; i < pixelIndexes.length; i++ ) {\n            totalR += pixels[pixelIndexes[i]][0];\n            totalG += pixels[pixelIndexes[i]][1];\n            totalB += pixels[pixelIndexes[i]][2];\n          }\n          totalR = Math.round( totalR / pixelIndexes.length );\n          totalG = Math.round( totalG / pixelIndexes.length );\n          totalB = Math.round( totalB / pixelIndexes.length );\n          pixelsReduced.push( [totalR,totalG,totalB] );\n        }\n      }\n      return pixelsReduced;\n    },\n    drawWorld() {\n      this.ctx.clearRect( 0, 0, this.ctx.canvas.width, this.ctx.canvas.height );\n      this.ctx.drawImage( this.imgWorld, 0, 0, this.ctx.canvas.width, this.ctx.canvas.height );\n    },\n    resetCar() {\n      console.log( \"reset car\");\n      this.car.x = this.worldWidth / 2 * 0.25;\n      this.car.y = this.worldHeight / 2 * 1.5;\n      this.car.angle = 0;\n    },\n    /*\n    keyDown(e) {\n      if( e.code === \"ArrowLeft\" ) {\n        this.car.steering = 0;\n      }\n      else if( e.code === \"ArrowRight\" ) {\n        this.car.steering = 1;\n      }\n    },\n    keyUp(e) {\n      if( e.code === \"ArrowLeft\" ) {\n        this.car.steering = undefined;\n      }\n      else if( e.code === \"ArrowRight\" ) {\n        this.car.steering = undefined;\n      }\n    }\n    */\n  }\n}\n</script>\n\n<style lang=\"scss\">\n\nbody {\n  margin: 0;\n  height: 100vh;\n  font-family: sans-serif;\n  font-size: 16px;\n  line-height: 150%;\n  background-color: black;\n  color: white;\n}\nlabel {\n  font-size: 13px;\n}\n#app {\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: auto;\n  max-width: 100vh;\n}\n\n.world {\n  position: relative;\n  width: 100%;\n  height: 0;\n  padding-top: 100%;\n  .world-canvas {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n  .training {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 20%;\n    height: 20%;\n    position: absolute;\n    top: 40%;\n    left: 40%;\n    span {\n      text-align: center;\n    }\n  }\n}\n\n\n.car-snapshot-canvas {\n  position: absolute;\n  top: 8px;\n  left: 8px;\n  border: 1px solid white;\n  image-rendering: pixelated;\n  width: 10%;\n  display: none;\n}\n.car-canvas {\n  position: absolute;\n  bottom: 8px;\n  left: 8px;\n  border: 1px solid white;\n  image-rendering: pixelated;\n  width: 15%;\n  display: none;\n}\n.view-snapshot-canvas {\n  position: absolute;\n  top: 8px;\n  right: 8px;\n  border: 1px solid white;\n  image-rendering: pixelated;\n  width: 10%;\n  display: none;\n}\n.view-canvas {\n  position: absolute;\n  bottom: 8px;\n  right: 8px;\n  border: 1px solid white;\n  image-rendering: pixelated;\n  width: 10%;\n  display: none;\n}\n.view-canvas-reduced {\n  position: absolute;\n  bottom: 8px;\n  right: 8px;\n  border: 1px solid red;\n  image-rendering: pixelated;\n  width: 15%;\n}\n\n\n\n.fps {\n  position: absolute;\n  top: 8px;\n  left: 50%;\n  color: #333333;\n}\n\n.highscores {\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  text-align: right;\n\n  .duration {\n    margin-bottom: 16px;\n  }\n\n  label {\n    display: block;\n    font-weight: bold;\n    margin-bottom: 8px;\n  }\n  ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    li {\n      &:first-child {\n        font-size: 20px;\n        line-height: 150%;\n      }\n      &:nth-child(2),\n      &:nth-child(3) {\n        font-size: 16px;\n        line-height: 20px;\n      }\n      display: block;\n      font-size: 13px;\n      line-height: 16px;\n    }\n  }\n\n}\n\n\n.score {\n  position: absolute;\n  right: calc( 15% + 48px);\n  bottom: 48px;\n  text-align: right;\n  label {\n    display: block;\n    font-weight: bold;\n    margin-bottom: 8px;\n  }\n\n  .last {\n    margin-top: 16px;\n    font-size: 25px;\n    label {\n      font-size: 16px;\n    }\n  }\n}\n\n.stats {\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  .stats-canvas {\n    height: 100%;\n    border-right: 1px solid #333;\n  }\n  &:before {\n    content: '';\n    position: absolute;\n    display: block;\n    width: 50%;\n    height: 100%;\n    border-right: 1px solid #666666;\n  }\n}\n\n.models {\n  position: absolute;\n  top: 0;\n  left: 7.5%;\n  label {\n    display: block;\n    font-weight: bold;\n    margin-bottom: 8px;\n  }\n  ul {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n    li {\n      color: #cccccc;\n      font-size: 13px;\n      line-height: 125%;\n      &.active {\n        font-weight: bold;\n        font-size: 25px;\n      }\n      .layers {\n        font-size: 10px;\n      }\n    }\n  }\n}\n\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=37aa0aa6&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"","module.exports = __webpack_public_path__ + \"img/world4.00d00251.jpg\";"],"sourceRoot":""}